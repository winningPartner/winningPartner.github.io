{"version":3,"sources":["components/Search/Search.jsx","components/Export/Export.jsx","pages/DynamicVariables/DynamicVariables.jsx"],"names":["styles","searchContainer","display","flexDirection","justifyContent","alignItems","searchTitle","marginRight","Search","searchQuery","style","type","name","onChange","e","target","value","Export","onExport","Button","size","variant","color","onClick","columns","selector","sortable","grow","fontSize","customStyles","header","fontWeight","headCells","textAlign","DymanicVariables","useState","reports","variables","setVariables","search","setSearch","loading","setLoading","totalRows","setTotalRows","brandsList","useSelector","store","brands","token","auth","currentUser","dates","actionsMemo","useMemo","exportCSV","downloadCSV","sortVariable","length","map","brand","today","moment","Date","format","dateVariable","start","end","fetchDynamicVariables","useCallback","page","query","params","sort","date","fetchAPI","fetchDataFromServer","then","data","total_count","setTimeout","catch","error","useEffect","Row","CSSTransition","timeout","classNames","Title","title","className","progressPending","pagination","paginationServer","paginationPerPage","paginationTotalRows","onChangePage","progressComponent","Circular","actions"],"mappings":"0PAEMA,EAAS,CACbC,gBAAiB,CACfC,QAAS,OACTC,cAAe,MACfC,eAAgB,WAChBC,WAAY,UAEdC,YAAa,CACXC,YAAa,SAiBFC,EAbA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChB,OACE,yBAAKC,MAAOV,EAAOC,iBACjB,0BAAMS,MAAOV,EAAOM,aAApB,WACA,2BACEK,KAAK,OACLC,KAAK,SACLC,SAAU,SAACC,GAAD,OAAOL,EAAYK,EAAEC,OAAOC,Y,SCF/BC,EAhBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,YACRV,KAAK,SACLW,MAAM,UACNC,QAAS,SAACT,GAAD,OAAOI,EAASJ,EAAEC,OAAOC,SALpC,YCSAQ,G,OAAU,CACd,CACEZ,KAAM,mBACNa,SAAU,mBACVC,UAAU,EACVC,KAAM,EACNjB,MAAO,CACLkB,SAAU,SAGd,CACEhB,KAAM,UACNa,SAAU,QACVC,UAAU,EACVC,KAAM,EACNjB,MAAO,CACLkB,SAAU,SAGd,CACEhB,KAAM,SACNa,SAAU,SACVC,UAAU,GAEZ,CACEd,KAAM,gBACNa,SAAU,gBACVC,UAAU,GAEZ,CACEd,KAAM,OACNa,SAAU,OACVC,UAAU,GAEZ,CACEd,KAAM,WACNa,SAAU,WACVC,UAAU,GAEZ,CACEd,KAAM,WACNa,SAAU,WACVC,UAAU,GAEZ,CACEd,KAAM,aACNa,SAAU,aACVC,UAAU,GAEZ,CACEd,KAAM,iBACNa,SAAU,iBACVC,UAAU,KAIRG,EAAe,CACnBC,OAAQ,CACNpB,MAAO,CACLkB,SAAU,OACVG,WAAY,QAGhBC,UAAW,CACTtB,MAAO,CACLkB,SAAU,OACVK,UAAW,YA8GFC,UAzGU,WAAO,IAAD,EACKC,mBAAS,CACzCC,QAAS,KAFkB,mBACtBC,EADsB,KACXC,EADW,OAIDH,mBAAS,IAJR,mBAItBI,EAJsB,KAIdC,EAJc,OAKCL,oBAAS,GALV,mBAKtBM,EALsB,KAKbC,EALa,OAMKP,mBAAS,GANd,mBAMtBQ,EANsB,KAMXC,EANW,KAOvBC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAC1CC,EAAQH,aAAY,SAACC,GAAD,OAAWA,EAAMG,KAAKC,YAAYF,SACtDG,EAAQN,aAAY,SAACC,GAAD,OAAWA,EAAMK,SAEnChB,EAAYC,EAAZD,QAEFiB,EAAcC,mBAClB,kBAAM,kBAAC,EAAD,CAAQpC,SAAU,kBAAMqC,IAAUC,YAAYpB,QACpD,CAACA,IAGCqB,EAAe,GACc,IAA7BZ,EAAWG,OAAOU,QACpBb,EAAWG,OAAOW,KAAI,SAACC,GACrB,OAAQH,GAAY,uBAAoBG,MAI5C,IAAMC,EAAQC,IAAO,IAAIC,MAAQC,OAAO,cACpCC,EAAY,oBAAgBJ,EAAhB,oBAAiCA,GACvB,IAAtBT,EAAMA,MAAMc,OAAmC,IAApBd,EAAMA,MAAMe,MACzCF,EAAY,oBAAgBb,EAAMA,MAAMc,MAA5B,oBAA6Cd,EAAMA,MAAMe,MAGvE,IAAMC,EAAwBC,uBAC5B,SAACC,EAAM/B,GACLG,GAAW,GACX,IAAM6B,EAAQhC,EAAM,kBAAcA,GAAW,GACvCiC,EAAS,CACbC,KAAMhB,EACNiB,KAAMT,EACNhB,MAAOA,EACPV,OAAQgC,EACRD,KAAMA,GAERK,IACGC,oBADH,aAEIjE,KAAM,qBACH6D,IAEJK,MAAK,YAAyC,IAAD,IAArCC,KAAQ1C,EAA6B,EAA7BA,QAAS2C,EAAoB,EAApBA,YACxBzC,EAAa,CACXF,QAASA,IAEXQ,EAAamC,GACbC,YAAW,WACTtC,GAAW,KACV,QAEJuC,OAAM,WACL3C,EAAa,CACXF,QAAS,CACP8C,OAAO,UAKjB,CAACjB,EAAcR,EAAcR,IAe/B,OAJAkC,qBAAU,WACRf,EAAsB,EAAG7B,KACxB,CAAC6B,EAAuB7B,IAGzB,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAeC,QAAS,IAAMC,WAAW,QACvC,kBAACC,EAAA,EAAD,CAAOC,MAAM,aAEf,yBAAKC,UAAU,iBACb,kBAAC,EAAD,CAAQjF,YAdM,SAAC8D,GACnB/B,EAAU+B,MAcN,kBAAC,IAAD,CACEkB,MAAM,oBACNjE,QAASA,EACTsD,KAAM1C,EACNuD,gBAAiBlD,EACjBZ,aAAcA,EACd+D,YAAU,EACVC,kBAAgB,EAChBC,kBAAmB,GACnBC,oBAAqBpD,EACrBqD,aA7BiB,SAAC1B,GACxBF,EAAsBE,EAAM/B,IA6BtB0D,kBAAmB,kBAACC,EAAA,EAAD,MACnBC,QAAS9C","file":"static/js/4.3cc4dd48.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n  searchContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n  searchTitle: {\r\n    marginRight: \"10px\",\r\n  },\r\n};\r\n\r\nconst Search = ({ searchQuery }) => {\r\n  return (\r\n    <div style={styles.searchContainer}>\r\n      <span style={styles.searchTitle}>Search:</span>\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        onChange={(e) => searchQuery(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Export = ({ onExport }) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"medium\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        onClick={(e) => onExport(e.target.value)}\r\n      >\r\n        Export\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Export;\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Circular } from \"../../components/Circular/Circular\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport moment from \"moment\";\r\nimport { fetchAPI } from \"../../api\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport { exportCSV } from \"../../api\";\r\nimport Export from \"../../components/Export/Export\";\r\nimport \"./DynamicVariables.scss\";\r\n\r\nconst columns = [\r\n  {\r\n    name: \"Dynamic variable\",\r\n    selector: \"dynamic_variable\",\r\n    sortable: true,\r\n    grow: 4,\r\n    style: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Casinos\",\r\n    selector: \"brand\",\r\n    sortable: true,\r\n    grow: 2,\r\n    style: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Clicks\",\r\n    selector: \"clicks\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Registrations\",\r\n    selector: \"registrations\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"FTDS\",\r\n    selector: \"ftds\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Deposits\",\r\n    selector: \"deposits\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Net Cash\",\r\n    selector: \"net_cash\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Commission\",\r\n    selector: \"commission\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"No of deposits\",\r\n    selector: \"no_of_deposits\",\r\n    sortable: true,\r\n  },\r\n];\r\n\r\nconst customStyles = {\r\n  header: {\r\n    style: {\r\n      fontSize: \"24px\",\r\n      fontWeight: \"800\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n};\r\n\r\nconst DymanicVariables = () => {\r\n  const [variables, setVariables] = useState({\r\n    reports: [],\r\n  });\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const brandsList = useSelector((store) => store.brands);\r\n  const token = useSelector((store) => store.auth.currentUser.token);\r\n  const dates = useSelector((store) => store.dates);\r\n\r\n  const { reports } = variables;\r\n\r\n  const actionsMemo = useMemo(\r\n    () => <Export onExport={() => exportCSV.downloadCSV(reports)} />,\r\n    [reports]\r\n  );\r\n\r\n  let sortVariable = \"\";\r\n  if (brandsList.brands.length !== 0) {\r\n    brandsList.brands.map((brand) => {\r\n      return (sortVariable += `&brand_ids[]=${brand}`);\r\n    });\r\n  }\r\n\r\n  const today = moment(new Date()).format(\"YYYY-MM-DD\");\r\n  let dateVariable = `date_from=${today}&date_to=${today}`;\r\n  if (dates.dates.start !== 0 && dates.dates.end !== 0) {\r\n    dateVariable = `date_from=${dates.dates.start}&date_to=${dates.dates.end}`;\r\n  }\r\n\r\n  const fetchDynamicVariables = useCallback(\r\n    (page, search) => {\r\n      setLoading(true);\r\n      const query = search ? `&search=${search}` : \"\";\r\n      const params = {\r\n        sort: sortVariable,\r\n        date: dateVariable,\r\n        token: token,\r\n        search: query,\r\n        page: page,\r\n      };\r\n      fetchAPI\r\n        .fetchDataFromServer({\r\n          type: \"dynamic_variables\",\r\n          ...params,\r\n        })\r\n        .then(({ data: { reports, total_count } }) => {\r\n          setVariables({\r\n            reports: reports,\r\n          });\r\n          setTotalRows(total_count);\r\n          setTimeout(() => {\r\n            setLoading(false);\r\n          }, 500);\r\n        })\r\n        .catch(() => {\r\n          setVariables({\r\n            reports: {\r\n              error: true,\r\n            },\r\n          });\r\n        });\r\n    },\r\n    [dateVariable, sortVariable, token]\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    fetchDynamicVariables(page, search);\r\n  };\r\n\r\n  const searchQuery = (query) => {\r\n    setSearch(query);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDynamicVariables(1, search);\r\n  }, [fetchDynamicVariables, search]);\r\n\r\n  return (\r\n    <Row>\r\n      <CSSTransition timeout={3000} classNames=\"fade\">\r\n        <Title title=\"Reports\" />\r\n      </CSSTransition>\r\n      <div className=\"data__wrapper\">\r\n        <Search searchQuery={searchQuery} />\r\n        <DataTable\r\n          title=\"Dynamic variables\"\r\n          columns={columns}\r\n          data={reports}\r\n          progressPending={loading}\r\n          customStyles={customStyles}\r\n          pagination\r\n          paginationServer\r\n          paginationPerPage={20}\r\n          paginationTotalRows={totalRows}\r\n          onChangePage={handlePageChange}\r\n          progressComponent={<Circular />}\r\n          actions={actionsMemo}\r\n        />\r\n      </div>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DymanicVariables;\r\n"],"sourceRoot":""}