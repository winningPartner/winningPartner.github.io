{"version":3,"sources":["components/Title/Title.jsx","pages/Assets/Assets.jsx"],"names":["Title","title","classes","className","defaultProps","Assets","useState","assets","setAssets","brandsList","useSelector","store","brands","token","auth","currentUser","sortVariable","length","map","brand","fetchAssets","useCallback","params","sort","type","assetsType","fetchAPI","fetchAssetsFromServer","then","data","console","log","catch","error","useEffect","attributes","id","src","href","key","alt"],"mappings":"4FAAA,oBAGMA,EAAQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtB,OAAO,wBAAIC,UAAWD,GAAUD,IAQlCD,EAAMI,aAAe,CACnBH,MAAO,eACPC,QAAS,eAGIF,O,kKCXFK,G,OAAS,WAAO,IAAD,EACEC,mBAAS,IADX,mBACnBC,EADmB,KACXC,EADW,KAEpBC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAC1CC,EAAQH,aAAY,SAACC,GAAD,OAAWA,EAAMG,KAAKC,YAAYF,SAExDG,EAAe,GACc,IAA7BP,EAAWG,OAAOK,QACpBR,EAAWG,OAAOM,KAAI,SAACC,GACrB,OAAQH,GAAY,uBAAoBG,MAI5C,IAAMC,EAAcC,uBAAY,WAC9B,IAAMC,EAAS,CACbC,KAAMP,EACNH,MAAOA,EACPW,KAAM,iBACNC,WAAY,uBAEdC,IACGC,sBADH,eAEOL,IAEJM,MAAK,YAAyB,IAAdC,EAAa,EAArBA,KAAQA,KACfC,QAAQC,IAAIF,GACZrB,EAAUqB,MAEXG,OAAM,SAACC,GACNH,QAAQC,IAAIE,QAEf,CAACjB,EAAcH,IAMlB,OAJAqB,qBAAU,WACRd,MACC,CAACX,EAAYW,IAGd,oCACE,kBAAC,IAAD,CAAOnB,MAAM,WACb,yBAAKE,UAAU,eACZI,EACGA,EAAOW,KAAI,oBAAGiB,WAAcC,EAAjB,EAAiBA,GAAIC,EAArB,EAAqBA,IAAKlB,EAA1B,EAA0BA,MAAOmB,EAAjC,EAAiCA,KAAjC,OACT,yBAAKC,IAAKH,EAAIjC,UAAU,SACtB,yBAAKA,UAAU,eACb,yBACEkC,IAAG,8CAAyCA,GAC5CG,IAAKrB,KAGT,yBAAKhB,UAAU,qBACb,0BAAMA,UAAU,gBAAhB,kBAA2CgB,IAC3C,yBAAKhB,UAAU,cACb,0BAAMA,UAAU,OAAhB,mBAAmCmC,EAAnC,0DAAyFD,EAAzF,kBAAsGlB,EAAtG,mBAKR","file":"static/js/4.06edf6c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Title = ({ title, classes }) => {\r\n  return <h1 className={classes}>{title}</h1>;\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  classes: PropTypes.string,\r\n};\r\n\r\nTitle.defaultProps = {\r\n  title: \"Simple title\",\r\n  classes: \"page__title\",\r\n};\r\n\r\nexport default Title;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { fetchAPI } from \"../../api\";\r\nimport \"./assets.scss\";\r\n\r\nexport const Assets = () => {\r\n  const [assets, setAssets] = useState([]);\r\n  const brandsList = useSelector((store) => store.brands);\r\n  const token = useSelector((store) => store.auth.currentUser.token);\r\n\r\n  let sortVariable = \"\";\r\n  if (brandsList.brands.length !== 0) {\r\n    brandsList.brands.map((brand) => {\r\n      return (sortVariable += `&brand_ids[]=${brand}`);\r\n    });\r\n  }\r\n\r\n  const fetchAssets = useCallback(() => {\r\n    const params = {\r\n      sort: sortVariable,\r\n      token: token,\r\n      type: \"default_assets\",\r\n      assetsType: \"?asset_types[]=logo\",\r\n    };\r\n    fetchAPI\r\n      .fetchAssetsFromServer({\r\n        ...params,\r\n      })\r\n      .then(({ data: { data } }) => {\r\n        console.log(data);\r\n        setAssets(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [sortVariable, token]);\r\n\r\n  useEffect(() => {\r\n    fetchAssets();\r\n  }, [brandsList, fetchAssets]);\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Assets\" />\r\n      <div className=\"assets-list\">\r\n        {assets\r\n          ? assets.map(({ attributes: { id, src, brand, href } }) => (\r\n              <div key={id} className=\"asset\">\r\n                <div className=\"asset-thumb\">\r\n                  <img\r\n                    src={`https://www.winningpartner.com:26134${src}`}\r\n                    alt={brand}\r\n                  />\r\n                </div>\r\n                <div className=\"asset-description\">\r\n                  <span className=\"casino-title\">{`Casino: ${brand}`}</span>\r\n                  <div className=\"asset-link\">\r\n                    <span className=\"tag\">{`<a href=\"${href}\"><img src\"https://www.winningpartner.com:26134${src}\" alt=\"${brand}\" /></a>`}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          : \"There is no data\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"sourceRoot":""}