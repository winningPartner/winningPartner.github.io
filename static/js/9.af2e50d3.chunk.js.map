{"version":3,"sources":["components/Title/Title.jsx","pages/Compaigns/Compaigns.jsx"],"names":["Title","title","classes","className","defaultProps","columns","name","selector","sortable","Compaigns","useState","compaigns","variables","setVariables","loading","setLoading","token","useSelector","store","auth","currentUser","brandsList","brands","sortVariable","length","map","brand","fetchCompaignsData","useCallback","params","sort","fetchAPI","fetchDataWithoutDateFromServer","type","then","data","console","log","setTimeout","catch","error","useEffect","getNewData","useMemo","compaign","attributes","progressPending","progressComponent"],"mappings":"4FAAA,oBAGMA,EAAQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtB,OAAO,wBAAIC,UAAWD,GAAUD,IAQlCD,EAAMI,aAAe,CACnBH,MAAO,eACPC,QAAS,eAGIF,O,wICRTK,G,MAAU,CACd,CACEC,KAAM,OACNC,SAAU,OACVC,UAAU,GAEZ,CACEF,KAAM,YACNC,SAAU,gBACVC,UAAU,KA6ECC,UAzEG,WAAO,IAAD,EACYC,mBAAS,CACzCC,UAAW,KAFS,mBACfC,EADe,KACJC,EADI,OAIQH,oBAAS,GAJjB,mBAIfI,EAJe,KAINC,EAJM,KAKhBC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,YAAYJ,SACtDK,EAAaJ,aAAY,SAACC,GAAD,OAAWA,EAAMI,UAE5CC,EAAe,GACc,IAA7BF,EAAWC,OAAOE,QACpBH,EAAWC,OAAOG,KAAI,SAACC,GACrB,OAAQH,GAAY,uBAAoBG,MAI5C,IAAMC,EAAqBC,uBAAY,WACrCb,GAAW,GACX,IAAMc,EAAS,CACbC,KAAMP,EACNP,MAAOA,GAETe,IACGC,+BADH,aAEIC,KAAM,SACHJ,IAEJK,MAAK,YAAyB,IAAdC,EAAa,EAArBA,KAAQA,KACfC,QAAQC,IAAIF,GACZtB,EAAa,CACXF,UAAWwB,IAEbG,YAAW,WACTvB,GAAW,KACV,QAEJwB,OAAM,WACL1B,EAAa,CACXF,UAAW,CACT6B,OAAO,UAId,CAACjB,EAAcP,IAElByB,qBAAU,WACRd,MACC,CAACN,EAAYM,IAEhB,IAAMe,EAAaC,mBAAQ,WACzB,OAAO/B,EAAUD,UAAUc,KAAI,SAACmB,GAC9B,OAAO,2BACFA,GACAA,EAASC,iBAGf,CAACjC,IAEJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOX,MAAM,WACb,yBAAKE,UAAU,iBACb,kBAAC,IAAD,CACEF,MAAM,YACNI,QAASA,EACT8B,KAAMO,EACNI,gBAAiBhC,EACjBiC,kBAAmB,kBAAC,IAAD","file":"static/js/9.af2e50d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Title = ({ title, classes }) => {\r\n  return <h1 className={classes}>{title}</h1>;\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  classes: PropTypes.string,\r\n};\r\n\r\nTitle.defaultProps = {\r\n  title: \"Simple title\",\r\n  classes: \"page__title\",\r\n};\r\n\r\nexport default Title;\r\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Circular } from \"../../components/Circular/Circular\";\r\nimport { fetchAPI } from \"../../api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst columns = [\r\n  {\r\n    name: \"Deal\",\r\n    selector: \"name\",\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Short URL\",\r\n    selector: \"generated_url\",\r\n    sortable: true,\r\n  },\r\n];\r\n\r\nconst Compaigns = () => {\r\n  const [variables, setVariables] = useState({\r\n    compaigns: [],\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const token = useSelector((store) => store.auth.currentUser.token);\r\n  const brandsList = useSelector((store) => store.brands);\r\n\r\n  let sortVariable = \"\";\r\n  if (brandsList.brands.length !== 0) {\r\n    brandsList.brands.map((brand) => {\r\n      return (sortVariable += `&brand_ids[]=${brand}`);\r\n    });\r\n  }\r\n\r\n  const fetchCompaignsData = useCallback(() => {\r\n    setLoading(true);\r\n    const params = {\r\n      sort: sortVariable,\r\n      token: token,\r\n    };\r\n    fetchAPI\r\n      .fetchDataWithoutDateFromServer({\r\n        type: \"links\",\r\n        ...params,\r\n      })\r\n      .then(({ data: { data } }) => {\r\n        console.log(data);\r\n        setVariables({\r\n          compaigns: data,\r\n        });\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 1000);\r\n      })\r\n      .catch(() => {\r\n        setVariables({\r\n          compaigns: {\r\n            error: true,\r\n          },\r\n        });\r\n      });\r\n  }, [sortVariable, token]);\r\n\r\n  useEffect(() => {\r\n    fetchCompaignsData();\r\n  }, [brandsList, fetchCompaignsData]);\r\n\r\n  const getNewData = useMemo(() => {\r\n    return variables.compaigns.map((compaign) => {\r\n      return {\r\n        ...compaign,\r\n        ...compaign.attributes,\r\n      };\r\n    });\r\n  }, [variables]);\r\n\r\n  return (\r\n    <Row>\r\n      <Title title=\"Manage\" />\r\n      <div className=\"data__wrapper\">\r\n        <DataTable\r\n          title=\"Compaigns\"\r\n          columns={columns}\r\n          data={getNewData}\r\n          progressPending={loading}\r\n          progressComponent={<Circular />}\r\n        />\r\n      </div>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Compaigns;\r\n"],"sourceRoot":""}